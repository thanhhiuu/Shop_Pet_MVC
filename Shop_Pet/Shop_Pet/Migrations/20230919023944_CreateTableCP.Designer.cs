// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shop_Pet.Data;

#nullable disable

namespace Shop_Pet.Migrations
{
    [DbContext(typeof(Shop_PetContext))]
    [Migration("20230919023944_CreateTableCP")]
    partial class CreateTableCP
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shop_Pet.Models.Accounts", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoaiUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Account");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Email = "admin@gmail.com",
                            LoaiUser = 1,
                            Name = "admin",
                            Password = "123"
                        },
                        new
                        {
                            Id = "2",
                            Email = "hieu@gmail.com",
                            LoaiUser = 0,
                            Name = "hieu",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("Shop_Pet.Models.Categorycs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("HienThi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamePet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categorycs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HienThi = "1",
                            NamePet = "Cat"
                        },
                        new
                        {
                            Id = 2,
                            HienThi = "2",
                            NamePet = "Dog"
                        },
                        new
                        {
                            Id = 3,
                            HienThi = "3",
                            NamePet = "Mouse"
                        });
                });

            modelBuilder.Entity("Shop_Pet.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ChuThich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Gia")
                        .HasColumnType("float");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            ChuThich = "Khôn",
                            Gia = 200.0,
                            ImageUrl = "dog1.png",
                            Name = "Husky"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            ChuThich = "Siêu đẹp",
                            Gia = 500.0,
                            ImageUrl = "cat1.png",
                            Name = "Mèo Ba Tư"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            ChuThich = "Màu Xám",
                            Gia = 1000.0,
                            ImageUrl = "mouse1.png",
                            Name = "Chuột Hamter"
                        });
                });

            modelBuilder.Entity("Shop_Pet.Models.Product", b =>
                {
                    b.HasOne("Shop_Pet.Models.Categorycs", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
